{"version":3,"sources":["assets/images/profile.png","hoc/withAuthRedirect.js","redux/profile-reducer.ts","assets/images/user.png","redux/dialogs-reducer.ts","components/common/Preloader/Preloader.module.css","components/Navbar/Navbar.module.css","api/api.ts","components/Navbar/Sidebar/Sidebar.jsx","components/Navbar/Sidebar/SidebarContainer.jsx","redux/auth-reducer.ts","components/common/FormsControls/Validations.js","components/Login/Login.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","redux/users-reducer.ts","components/common/Paginator/Paginator.tsx","components/Users/User.jsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/app-reducer.ts","redux/sidebar-reducer.ts","redux/redux-store.ts","hoc/withSuspense.js","App.js","reportWebVitals.js","index.js","components/common/FormsControls/FormsControls.module.css","redux/users-selectors.ts","assets/images/preloader.svg","components/common/Preloader/Preloader.jsx","components/Users/Users.module.css","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css"],"names":["withAuthRedirect","Component","RedirectComponent","this","props","isAuth","to","React","connect","state","auth","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","STATE_EDIT_MODE","initialState","posts","id","message","likesCount","profile","status","stateEditMode","addPost","newPostText","type","setStatus","changeStateEditMode","getUserProfile","userId","dispatch","profileAPI","getProfile","response","data","getStatus","updateStatus","resultCode","savePhoto","file","photos","saveProfile","getState","stopSubmit","_error","messages","Promise","reject","profileReducer","action","newPost","filter","p","postId","SEND_MESSAGE","dialogs","name","sendMessage","newMessageBody","dialogsReducer","body","module","exports","ResultCodesEnum","ResultCodesForCaptcha","instance","axios","create","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","get","then","unfollow","delete","follow","post","authAPI","me","login","email","password","rememberMe","captcha","logout","put","photoFile","formData","FormData","append","securityAPI","getCaptchaUrl","SidebarItems","className","s","friends","src","profileImg","friendsName","Friends","friendsElements","map","f","sidebar","friendsElem","FriendsContainer","SET_AUTH_USER_DATA","GET_CAPTCHA_URL_SUCCESS","CAPTCHA_URL_NULL","INCORRECT_LOG_OR_PASS","captchaUrl","isIncorrectLogOrPass","errorMessage","setAuthUserData","payload","getCaptchaUrlSuccess","isIncorrect","getAuthUserData","Success","url","authReducer","loginValidation","required","validate","value","match","LoginForm","captchaUrlNull","useForm","errors","formState","handleSubmit","control","useEffect","onSubmit","style","textField","rules","render","field","TextField","size","label","onChange","e","error","helperText","incorrect","FormControlLabel","Checkbox","checked","inputCaptcha","Button","variant","testLogPass","compose","CaptchaIsRequired","withRouter","Navbar","nav","item","activeClassName","active","users","exact","path","News","content","Music","Settings","FOLLOW","UNFOLLOW","SET_USERS","SENT_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","usersReducer","u","followed","count","Paginator","totalItemsCount","onPageChanged","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","cn","selectedPage","pageNumber","User","user","all","left","small","userPhoto","usersPhoto","disabled","some","box","ava","Users","UsersContainer","pageTitle","Preloader","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","bind","page","items","totalCount","HeaderStyle","styled","header","Header","loginBlock","HeaderContainer","INITIALIZED_SUCCESS","initialized","appReducer","sidebarReducer","rootReducer","combineReducers","profilePage","dialogsPage","usersPage","app","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","fallback","DialogsContainer","lazy","ProfileContainerWithHooks","App","initializeApp","component","AppContainer","promise","SamuraiJSApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","createSelector","preloader"],"mappings":"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","file":"static/js/main.bebd9dac.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profile.b579f09b.png\";","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let mapStateToPropsForRedirect = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n","import {profileAPI} from \"../api/api\";\r\nimport React from \"react\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {PhotosType, PostType, ProfileType} from \"../types/types\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\nconst STATE_EDIT_MODE = 'STATE_EDIT_MODE';\r\n\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 15},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 20},\r\n        {id: 2, message: 'Blabla', likesCount: 11},\r\n        {id: 2, message: 'Dada', likesCount: 5}\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: \"\",\r\n    stateEditMode: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos} as ProfileType\r\n            }\r\n        case STATE_EDIT_MODE:\r\n            return {\r\n                ...state,\r\n                stateEditMode: action.stateEditMode\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\ntype AddPostActionType = {\r\n    type: typeof ADD_POST\r\n    newPostText: string\r\n}\r\nexport const addPost = (newPostText: string): AddPostActionType => ({type: ADD_POST, newPostText});\r\ntype SetUserProfileActionType = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: ProfileType\r\n}\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileActionType => ({type: SET_USER_PROFILE, profile});\r\ntype SetStatusActionType = {\r\n    type: typeof SET_STATUS\r\n    status: string\r\n}\r\nexport const setStatus = (status: string): SetStatusActionType => ({type: SET_STATUS, status});\r\ntype DeletePostActionType = {\r\n    type: typeof DELETE_POST\r\n    postId: number\r\n}\r\nexport const deletePost = (postId: number): DeletePostActionType => ({type: DELETE_POST, postId});\r\ntype SavePhotoSuccessActionType = {\r\n    type: typeof SAVE_PHOTO_SUCCESS\r\n    photos: PhotosType\r\n}\r\nexport const savePhotoSuccess = (photos: PhotosType): SavePhotoSuccessActionType => ({type: SAVE_PHOTO_SUCCESS, photos});\r\ntype ChangeStateEditModeActionType = {\r\n    type: typeof STATE_EDIT_MODE\r\n    stateEditMode: boolean\r\n}\r\nexport const changeStateEditMode = (stateEditMode: boolean): ChangeStateEditModeActionType => ({type: STATE_EDIT_MODE, stateEditMode});\r\n\r\n\r\nexport const getUserProfile = (userId: number) => async (dispatch: any) => {\r\n        const response = await profileAPI.getProfile(userId)\r\n        dispatch(setUserProfile(response.data));\r\n    }\r\n\r\n\r\nexport const getStatus = (userId: number) => async (dispatch: any) => {\r\n        const response = await profileAPI.getStatus(userId)\r\n        dispatch(setStatus(response.data));\r\n    }\r\n\r\nexport const updateStatus = (status: string) =>\r\n    async (dispatch: any) => {\r\n        try {\r\n            const response = await profileAPI.updateStatus(status);\r\n            if (response.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n        } catch (error) {\r\n        }\r\n    }\r\n\r\nexport const savePhoto = (file: any) =>\r\n    async (dispatch: any) => {\r\n        const response = await profileAPI.savePhoto(file);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(savePhotoSuccess(response.data.data.photos));\r\n        }\r\n    }\r\n\r\nexport const saveProfile = (profile: ProfileType) =>\r\n    async (dispatch: any, getState: any) => {\r\n        const userId = getState().auth.userId;\r\n        const response = await profileAPI.saveProfile(profile);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getUserProfile(userId));\r\n        } else {\r\n            dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}));\r\n            return Promise.reject(response.data.messages[0])\r\n        }\r\n    }\r\n\r\nexport default profileReducer;","export default __webpack_public_path__ + \"static/media/user.96e310a6.png\";","\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\ntype DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\ntype MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Victor'},\r\n        {id: 6, name: 'Valera'}\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ] as Array<MessageType>\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype SendMessageCreatorActionType = {\r\n    type: typeof SEND_MESSAGE\r\n    newMessageBody: string\r\n}\r\nexport const sendMessage = (newMessageBody: string): SendMessageCreatorActionType  => ({type: SEND_MESSAGE, newMessageBody} );\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1ODxu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3nSOY\",\"item\":\"Navbar_item__hhT5I\",\"active\":\"Navbar_active__Zne0_\",\"sidebar\":\"Navbar_sidebar__29wd4\",\"friendsElem\":\"Navbar_friendsElem__2wsyB\",\"friends\":\"Navbar_friends__3VKDq\",\"friendsName\":\"Navbar_friendsName__LYKHS\",\"users\":\"Navbar_users__v_D3u\"};","import axios from \"axios\";\r\nimport {ProfileType} from \"../types/types\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"74f810e7-2ed4-4824-af60-8d8fb5f87fe8\"\r\n    }\r\n});\r\n\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    unfollow(id: number) {\r\n        return instance.delete(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    follow(id: number) {\r\n        return instance.post(`follow/${id}`, {})\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    }\r\n}\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\n\r\nexport enum ResultCodesForCaptcha {\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\ntype MeResponseType = {\r\n    data: {id: number, email: string, login: string}\r\n    resultCode: ResultCodesEnum\r\n    messages: Array<string>\r\n}\r\n\r\ntype LoginResponseType = {\r\n    data: {userId: number}\r\n    resultCode: ResultCodesEnum | ResultCodesForCaptcha\r\n    messages: Array<string>\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<MeResponseType>(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    login(email: string, password: string, rememberMe = false, captcha: null | string = null) {\r\n        return instance.post<LoginResponseType>(`auth/login`, {email, password, rememberMe, captcha})\r\n    .then(response => {\r\n            return response.data\r\n        });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/${userId}`)\r\n\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status`, {status: status})\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    savePhoto(photoFile: any) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put(`profile`, profile);\r\n    }\r\n}\r\n\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './../Navbar.module.css';\r\nimport profileImg from '../../../assets/images/profile.png';\r\n\r\n\r\nconst SidebarItems = (props) => {\r\n    return (\r\n        <div className={s.friends}>\r\n            <img src={profileImg}/>\r\n            <NavLink to={'/friends/' + props.id}>\r\n                <div className={s.friendsName}> {props.name} </div>\r\n            </NavLink>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nconst Friends = (props) => {\r\n    let friendsElements = props.friends.map(f => <SidebarItems name={f.name} key={f.id} id={f.id}/>);\r\n    return (\r\n        <div className={s.sidebar}>\r\n            <div>\r\n                <h1>Friends</h1>\r\n            </div>\r\n\r\n                <div className={s.friendsElem}>\r\n                    {friendsElements}\r\n                </div>\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Friends;\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Friends from \"./Sidebar\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friends: state.sidebar.friends\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        }\r\n}\r\nconst FriendsContainer = connect(mapStateToProps, mapDispatchToProps)(Friends);\r\n\r\nexport default FriendsContainer;\r\n\r\n\r\n\r\n\r\n\r\n","import {authAPI, ResultCodesEnum, ResultCodesForCaptcha, securityAPI} from \"../api/api\";\r\n\r\nconst SET_AUTH_USER_DATA = 'samurai-network/auth/SET_AUTH_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\r\nconst CAPTCHA_URL_NULL = 'samurai-network/auth/CAPTCHA_URL_NULL';\r\nconst INCORRECT_LOG_OR_PASS = 'samurai-network/auth/INCORRECT_LOG_OR_PASS';\r\n\r\nlet initialState = {\r\n    userId: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null,\r\n    isIncorrectLogOrPass: false,\r\n    errorMessage: null as string | null\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst authReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case CAPTCHA_URL_NULL:\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl\r\n            }\r\n        case INCORRECT_LOG_OR_PASS:\r\n            return {\r\n                ...state,\r\n                isIncorrectLogOrPass: action.isIncorrectLogOrPass,\r\n                errorMessage: action.errorMessage\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\ntype SetAuthUserDataActionTypePayloadType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\ntype SetAuthUserDataActionType = {\r\n    type: typeof SET_AUTH_USER_DATA,\r\n    payload: SetAuthUserDataActionTypePayloadType\r\n}\r\n\r\nexport const setAuthUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean): SetAuthUserDataActionType => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n})\r\n\r\ntype getCaptchaUrlSuccessActionType = {\r\n    type: typeof GET_CAPTCHA_URL_SUCCESS,\r\n    payload: {captchaUrl: string}\r\n}\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string): getCaptchaUrlSuccessActionType => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS,\r\n    payload: {captchaUrl}\r\n})\r\n\r\ntype captchaUrlNullActionType = {\r\n    type: typeof CAPTCHA_URL_NULL,\r\n    captchaUrl: null\r\n}\r\nexport const captchaUrlNull = (captchaUrl: null = null): captchaUrlNullActionType => ({\r\n    type: CAPTCHA_URL_NULL,\r\n    captchaUrl\r\n})\r\n\r\n\r\ntype isIncorrectActionType = {\r\n    type: typeof INCORRECT_LOG_OR_PASS,\r\n    isIncorrectLogOrPass: boolean,\r\n    errorMessage: string\r\n}\r\nexport const isIncorrect = (isIncorrectLogOrPass: boolean, errorMessage: string): isIncorrectActionType => ({type: INCORRECT_LOG_OR_PASS, isIncorrectLogOrPass, errorMessage});\r\n\r\n\r\n\r\nexport const getAuthUserData = () => {\r\n    return async (dispatch: any) => {\r\n        let data = await authAPI.me()\r\n        if (data.resultCode === ResultCodesEnum.Success) {\r\n            let {id, email, login} = data.data\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string) => {\r\n    return async (dispatch: any) => {\r\n        let data = await authAPI.login(email, password, rememberMe, captcha)\r\n        if (data.resultCode === ResultCodesEnum.Success) {\r\n            dispatch(getAuthUserData());\r\n        } else {\r\n            if (data.resultCode === ResultCodesForCaptcha.CaptchaIsRequired) {\r\n                dispatch(getCaptchaUrl())\r\n            }\r\n            let errorMessage = data.messages[0];\r\n            // dispatch(stopSubmit(\"login\", {_error: message}));\r\n            dispatch(isIncorrect(true, errorMessage));\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => {\r\n    return async (dispatch: any) => {\r\n        const response = await securityAPI.getCaptchaUrl();\r\n        const captchaUrl = response.data.url;\r\n        dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => {\r\n    return async (dispatch: any) => {\r\n        let response = await authAPI.logout();\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n    }\r\n}\r\n\r\nexport default authReducer;","\r\nexport const loginValidation = {\r\n    required: \"Поле обязательно к заполнению\",\r\n    validate: (value) => {\r\n        if (value.match(/[а-яА-я]/)) {\r\n            return \"Логин не может содержать русские буквы\"\r\n        }\r\n        return true\r\n    }\r\n}","import React, {useEffect} from \"react\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {captchaUrlNull, isIncorrect, login} from \"../../redux/auth-reducer\";\r\nimport style from \"../common/FormsControls/FormsControls.module.css\"\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport {loginValidation} from \"../common/FormsControls/Validations\";\r\n\r\n\r\nconst LoginForm = ({captchaUrl, isIncorrectLogOrPass, errorMessage, captchaUrlNull, isIncorrect, ...props}) => {\r\n    const {\r\n        formState: {errors},\r\n        handleSubmit,\r\n        control\r\n    } = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        props.onSubmit(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        captchaUrlNull();\r\n        isIncorrect(false);\r\n    }, [])\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className={style.textField}>\r\n\r\n                <Controller\r\n                    control={control}\r\n                    name=\"email\"\r\n                    rules={loginValidation}\r\n                    render={({field}) => (\r\n                        <TextField\r\n                            size=\"small\"\r\n                            label=\"Email\"\r\n                            onChange={(e) => field.onChange(e)}\r\n                            value={field.value}\r\n                            error={errors.email?.message}\r\n                            helperText={errors.email?.message}\r\n                        />\r\n                    )}\r\n                />\r\n\r\n            </div>\r\n            <div className={style.textField}>\r\n                <Controller\r\n                    control={control}\r\n                    name=\"password\"\r\n                    rules={{required: \"Поле обязательно к заполнению\"}}\r\n                    render={({field}) => (\r\n                        <TextField\r\n                            size=\"small\"\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            onChange={(e) => field.onChange(e)}\r\n                            value={field.value}\r\n                            error={errors.password?.message}\r\n                            helperText={errors.password?.message}\r\n                        />\r\n                    )}\r\n                />\r\n            </div>\r\n            {isIncorrectLogOrPass && <div className={style.incorrect}>{errorMessage}</div>}\r\n            <div className={style.textField}>\r\n                <Controller\r\n                    control={control}\r\n                    name=\"rememberMe\"\r\n                    render={({field: {onChange, value}}) => (\r\n                        <FormControlLabel\r\n                            control={<Checkbox\r\n                                checked={value}\r\n                                onChange={onChange}/>} label=\"Запомнить меня\"\r\n                        />\r\n                    )}\r\n                />\r\n\r\n            </div>\r\n\r\n\r\n            {captchaUrl && <img src={captchaUrl}/>}\r\n            {captchaUrl &&\r\n            <div className={style.inputCaptcha}>\r\n                <Controller\r\n                    control={control}\r\n                    name=\"captcha\"\r\n                    rules={{required: \"Поле обязательно к заполнению\"}}\r\n                    render={({field}) => (\r\n                        <TextField\r\n                            size=\"small\"\r\n                            label=\"Symbols from image\"\r\n                            onChange={(e) => field.onChange(e)}\r\n                            value={field.value}\r\n                            error={errors.captcha?.message}\r\n                            helperText={errors.captcha?.message}\r\n                        />\r\n                    )}\r\n                /></div>}\r\n\r\n\r\n            <div className={style.textField}>\r\n                <Button variant=\"contained\" type=\"submit\">Войти</Button>\r\n            </div>\r\n\r\n            <div className={style.testLogPass}>\r\n                <h5> Тестовый логин и пароль: </h5>\r\n                <h5> react-redux-test@mail.ru </h5>\r\n                <h5> 12345678 </h5>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className={style.textField}>Вход</h2>\r\n            <LoginForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}\r\n                       isIncorrectLogOrPass={props.isIncorrectLogOrPass}\r\n                       errorMessage={props.errorMessage}\r\n                       captchaUrlNull={props.captchaUrlNull}\r\n                       isIncorrect={props.isIncorrect}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    debugger\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl,\r\n        isIncorrectLogOrPass: state.auth.isIncorrectLogOrPass,\r\n        errorMessage: state.auth.errorMessage\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {login, captchaUrlNull, isIncorrect}),\r\n    withRouter\r\n)(Login)\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink, Route} from \"react-router-dom\";\r\nimport FriendsContainer from \"./Sidebar/SidebarContainer\";\r\nimport Login from \"../Login/Login\";\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/dialogs' activeClassName={s.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/News' activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/Music' activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div  className={s.users}>\r\n            <div className={s.item}>\r\n                <NavLink to='/Users' activeClassName={s.active}>Find users</NavLink>\r\n            </div>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/Settings' activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n\r\n            <Route exact path='/profile' render={() => <FriendsContainer/>}/>\r\n\r\n\r\n        </nav>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar;\r\n\r\n\r\n","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n         News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n         Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n         Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import {userAPI} from \"../api/api\";\r\nimport {UserType} from \"../types/types\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\n\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SENT_CURRENT_PAGE = 'SENT_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<number> // array of users id\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst usersReducer = (state = initialState, action: ActionsTypes): InitialStateType  => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SENT_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.count // 100\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\ntype ActionsTypes = FollowSuccessActionType | UnfollowSuccessActionType | SetUsersActionType | SetCurrentPageActionType |\r\n    SetTotalUsersCountActionType | ToggleIsFetchingActionType | ToggleFollowingProgressActionType\r\n\r\ntype FollowSuccessActionType = {\r\n    type: typeof FOLLOW\r\n    userId: number\r\n}\r\nexport const followSuccess = (userId: number): FollowSuccessActionType => ({type: FOLLOW, userId});\r\ntype UnfollowSuccessActionType = {\r\n    type: typeof UNFOLLOW\r\n    userId: number\r\n}\r\nexport const unfollowSuccess = (userId: number): UnfollowSuccessActionType => ({type: UNFOLLOW, userId});\r\ntype SetUsersActionType = {\r\n    type: typeof SET_USERS\r\n    users: Array<UserType>\r\n}\r\nexport const setUsers = (users: Array<UserType>): SetUsersActionType => ({type: SET_USERS, users});\r\ntype SetCurrentPageActionType = {\r\n    type: typeof SENT_CURRENT_PAGE\r\n    currentPage: number\r\n}\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageActionType => ({type: SENT_CURRENT_PAGE, currentPage});\r\ntype SetTotalUsersCountActionType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT\r\n    count: number\r\n}\r\nexport const setTotalUsersCount = (totalUsersCount: number): SetTotalUsersCountActionType => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\ntype ToggleIsFetchingActionType = {\r\n    type: typeof TOGGLE_IS_FETCHING\r\n    isFetching: boolean\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingActionType => ({type: TOGGLE_IS_FETCHING, isFetching});\r\ntype ToggleFollowingProgressActionType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS\r\n    isFetching: boolean\r\n    userId: number\r\n}\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number): ToggleFollowingProgressActionType => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId});\r\n\r\n\r\ntype GetStateType = () => AppStateType\r\ntype DispatchType = Dispatch<ActionsTypes>\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>\r\n\r\nexport const requestUsers = (page: number, pageSize: number): ThunkType => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(toggleIsFetching(true));\r\n        let data = await userAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n        dispatch(setCurrentPage(page));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: DispatchType, userId: number, apiMethod: any, actionCreator: (userId: number) => FollowSuccessActionType | UnfollowSuccessActionType) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let data = await apiMethod(userId)\r\n    if (data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, userAPI.follow.bind(userId), followSuccess)\r\n\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, userAPI.unfollow.bind(userId), unfollowSuccess)\r\n    }\r\n}\r\n\r\n// export const follow = (userId) => {\r\n//     return async (dispatch) => {\r\n//         dispatch(toggleFollowingProgress(true, userId));\r\n//         let data = await userAPI.follow(userId)\r\n//         if (data.resultCode == 0) {\r\n//             dispatch(followSuccess(userId));\r\n//         }\r\n//         dispatch(toggleFollowingProgress(false, userId));\r\n//     }\r\n// }\r\n//\r\n// export const unfollow = (userId) => {\r\n//     return async (dispatch) => {\r\n//         dispatch(toggleFollowingProgress(true, userId));\r\n//         let data = await userAPI.unfollow(userId)\r\n//         if (data.resultCode == 0) {\r\n//             dispatch(unfollowSuccess(userId));\r\n//         }\r\n//         dispatch(toggleFollowingProgress(false, userId));\r\n//     }\r\n// }\r\n\r\nexport default usersReducer;\r\n\r\n","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n}\r\n\r\nlet Paginator: React.FC<PropsType> = ({totalItemsCount, pageSize, currentPage, onPageChanged}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionSize = 10;\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber - 1)\r\n        }}> PREV </button>\r\n        }\r\n        <div className={styles.pages}>\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    return <span className={cn ({ [styles.selectedPage] : currentPage === p}, styles.pageNumber) }\r\n                                 key={p}\r\n                                 onClick={(e) => {\r\n                                     onPageChanged(p)\r\n                                 }}> {p} </span>\r\n                })}\r\n        </div>\r\n        {portionCount > portionNumber &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber + 1)\r\n        }}> NEXT </button>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import styles from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\n\r\nlet User = ({user, followingInProgress, follow, unfollow, ...props }) => {\r\n\r\n    return (\r\n           <div>\r\n                <div className={styles.all}>\r\n                    <div className={styles.left}>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + user.id}>\r\n                                <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                                     className={styles.usersPhoto}/>\r\n                            </NavLink>\r\n                        </div>\r\n\r\n                        <div>\r\n                            {user.followed\r\n                                ? <Button  variant=\"outlined\" disabled={followingInProgress.some(id => id === user.id)}\r\n                                          onClick={() => { unfollow(user.id); }}>\r\n                                    Unfollow</Button>\r\n                                : <Button  variant=\"outlined\" disabled=\r\n                                              {followingInProgress.some(id => id === user.id)}\r\n                                          onClick={() => { follow(user.id); }}>\r\n                                    Follow</Button>}\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.box}>\r\n                        <div className={styles.ava}>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.status}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>)\r\n        }\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport {UserType} from \"../../types/types\";\r\n\r\ntype PropsType = {\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    users: Array<UserType>\r\n    followingInProgress: Array<number>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\nlet Users: React.FC<PropsType> = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props}) => {\r\n\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        {\r\n            users.map(u => <User key={u.id}\r\n                                 user={u}\r\n                                 followingInProgress={props.followingInProgress}\r\n                                 follow={props.follow}\r\n                                 unfollow={props.unfollow}\r\n            />)\r\n        }\r\n   </div>\r\n}\r\n\r\n\r\nexport default Users;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow, toggleFollowingProgress, requestUsers\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getUsers,\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount\r\n} from \"../../redux/users-selectors\";\r\nimport {UserType} from \"../../types/types\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\ntype MapStatePropsType = {\r\n    currentPage: number\r\n    pageSize: number\r\n    isFetching: boolean\r\n    totalUsersCount: number\r\n    users: Array<UserType>\r\n    followingInProgress: Array<number>\r\n}\r\ntype MapDispatchPropsType = {\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n\r\n}\r\ntype OwnPropsType = {\r\n    pageTitle: string\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType & OwnPropsType\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n        // this.props.setCurrentPage(pageNumber);\r\n        // this.props.toggleIsFetching(true);\r\n        // usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\r\n        //     this.props.toggleIsFetching(false);\r\n        //     this.props.setUsers(data.items);\r\n        // })\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            <h2>{this.props.pageTitle}</h2>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (userId) => {\r\n//             dispatch(followAC(userId))\r\n//         },\r\n//         unfollow: (userId) => {\r\n//             dispatch(unfollowAC(userId))\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (pageNumber) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//         setTotalUsersCount: (totalCount) => {\r\n//             dispatch(setUsersTotalCountAC(totalCount))\r\n//         },\r\n//         toggleIsFetching: (isFetching) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(mapStateToProps, {\r\n        follow, unfollow, getUsers: requestUsers})\r\n)\r\n(UsersContainer)\r\n\r\n// export default withAuthRedirect(connect(mapStateToProps, {\r\n//     follow,\r\n//     unfollow,\r\n//     setCurrentPage,\r\n//     toggleFollowingProgress,\r\n//     getUsers\r\n// })(UsersContainer));\r\n\r\n","import React, {Component} from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\nimport styled from 'styled-components';\r\n\r\nconst HeaderStyle = styled.header`\r\n    grid-area: h;\r\n    background-color: #466cf269;\r\n    margin: 5px 10px 5px 10px;\r\n    border-radius: 10px;\r\n    height: auto;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n`\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <HeaderStyle>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth ? <div> <div>{props.login}</div>\r\n                        <div className={s.logout}>\r\n                            <Button size=\"small\" variant=\"contained\" onClick={props.logout}>Выйти</Button>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <NavLink to={'/login'}>Войти</NavLink>}\r\n\r\n            </div>\r\n        </HeaderStyle>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport Header from \"./Header\";\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData, logout} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component  {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n\r\n})\r\n\r\n\r\n\r\nexport default connect (mapStateToProps, {logout}) (HeaderContainer);","import React from \"react\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\n\r\nlet initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\ntype InitializedSuccessActionType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\n\r\nexport const initializedSuccess = (): InitializedSuccessActionType => ({type: INITIALIZED_SUCCESS})\r\n\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch: any) => {\r\n        let promise = dispatch(getAuthUserData())\r\n        Promise.all([promise])\r\n            .then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default appReducer;","\r\ntype FriendsType = {\r\n    id: number\r\n    name: string\r\n}\r\nlet initialState =  {\r\n    friends: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Sveta'}\r\n    ] as Array<FriendsType>\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst sidebarReducer = (state = initialState, action: any): InitialStateType => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n        profilePage: profileReducer,\r\n        dialogsPage: dialogsReducer,\r\n        sidebar: sidebarReducer,\r\n        usersPage: usersReducer,\r\n        auth: authReducer,\r\n        app: appReducer,\r\n        form: formReducer\r\n    }\r\n)\r\n\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n// @ts-ignore\r\nwindow.__store__ = store\r\n\r\nexport default store\r\n\r\n","import React, {Suspense} from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n    let SuspenseComponent = (props) => {\r\n        return (\r\n            <Suspense fallback={<Preloader />}>  <Component {...props} />  </Suspense>\r\n        )}\r\n\r\n    return SuspenseComponent\r\n}\r\n","import React, {Component, Suspense} from 'react';\r\nimport './App.css';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport {BrowserRouter, HashRouter, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainerWithHooks = React.lazy(() => import('./components/Profile/ProfileContainerWithHooks'));\r\n\r\nclass App extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className='box'>\r\n                <div className='app-wrapper'>\r\n                    <HeaderContainer/>\r\n                    <Navbar/>\r\n                    <div className='app-wrapper-content'>\r\n                        <Switch>\r\n                            <Route exact path='/' render={() => <Redirect to={\"/profile\"}/>}/>\r\n                            <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\r\n                            {/*<Route exact path='/profile' render={ withSuspense(ProfileContainerWithHooks)}/>*/}\r\n                            {/*<Route path='/profile/:userId' render={ withSuspense(ProfileContainerWithHooks) }/>*/}\r\n                            <Route path='/profile/:userId?' render={withSuspense(ProfileContainerWithHooks)}/>\r\n                            <Route path='/news' render={() => <News/>}/>\r\n                            <Route path='/music' component={Music}/>\r\n                            <Route path='/settings' component={Settings}/>\r\n                            <Route path='/users' render={() => <UsersContainer pageTitle={\"Самураи\"}/>}/>\r\n                            <Route path='/login' render={() => <Login/>}/>\r\n                            <Route path='*' render={() => <div>404 NOT FOUND</div>}/>\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))\r\n(App);\r\n\r\nconst SamuraiJSApp = (props) => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\n\r\nexport default SamuraiJSApp;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from \"./redux/redux-store\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport SamuraiJSApp from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n    <SamuraiJSApp/>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2zv4b\",\"formControlError\":\"FormsControls_formControlError__1O3eN\",\"error\":\"FormsControls_error__1ShPH\",\"formSummaryError\":\"FormsControls_formSummaryError__1oxk-\",\"textField\":\"FormsControls_textField__WIoAW\",\"testLogPass\":\"FormsControls_testLogPass__3kz-O\",\"textArea\":\"FormsControls_textArea__3zT8-\",\"incorrect\":\"FormsControls_incorrect__1Uhjz\",\"inputCaptcha\":\"FormsControls_inputCaptcha__3GlZw\"};","import {createSelector} from \"reselect\";\r\nimport {AppStateType} from \"./redux-store\";\r\n\r\nconst getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/preloader.4b4fa2fc.svg\";","import preloader from \"../../../assets/images/preloader.svg\";\r\nimport React from \"react\";\r\nimport style from \"./Preloader.module.css\"\r\n\r\nlet Preloader = (props) => {\r\n    return <div className={style.preloader}>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPhoto\":\"Users_usersPhoto__NZwB9\",\"all\":\"Users_all__2nvPQ\",\"left\":\"Users_left__2lFVZ\",\"box\":\"Users_box__2z9yr\",\"ava\":\"Users_ava__1kl17\",\"location\":\"Users_location__q9rWt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"Paginator_pages__12wS9\",\"pageNumber\":\"Paginator_pageNumber__3ea4t\",\"selectedPage\":\"Paginator_selectedPage__3kb4O\",\"paginator\":\"Paginator_paginator__nz-wN\",\"btnNext\":\"Paginator_btnNext__3BQDQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__jm4on\",\"loginBlock\":\"Header_loginBlock__14sjD\",\"logout\":\"Header_logout__3D6B7\",\"login\":\"Header_login__eoFX9\"};"],"sourceRoot":""}